name: Release

on: workflow_dispatch

jobs:
  release:
    if: github.ref == 'refs/heads/main'
    name: Generate release
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/git
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  sentry:
    name: Create Sentry release
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: yarn
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Build application
        run: yarn run build
      - name: Sentry Release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: semantic
        with:
          environment: production
          sourcemaps: ./dist
          version: ${{ needs.release.outputs.new_version }}

  backmerge:
    name: Backmerge to development
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
          ref: main
      - name: Setup Git config
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Merge master in development
        run: |
          git checkout development
          git merge origin/main

  build-publish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - run: echo "Hello world"
